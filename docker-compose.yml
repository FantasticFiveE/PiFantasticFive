version: "3.8"

services:
  mongo:
    image: mongo:4.4
    container_name: mongo
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongo-data:/data/db
    networks:
      - devnet

  backend:
    build:
      context: ./Backend/server
    container_name: backend
    ports:
      - "3001:3001"
    environment:
      - MONGO_URI=mongodb://root:example@mongo:27017/users?authSource=admin
    depends_on:
      - mongo
    networks:
      - devnet

  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "5173:80"
    depends_on:
      - backend
    networks:
      - devnet

  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins
    user: root # üõ†Ô∏è ensure Jenkins has permission to write to mounted volumes
    ports:
      - "8080:8080"
    volumes:
      - jenkins-data:/var/jenkins_home # ‚úÖ named volume (no permission issue)
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - backend
      - frontend
      - sonarqube
    networks:
      - devnet

  sonarqube:
    image: sonarqube:community
    container_name: sonarqube
    ports:
      - "9000:9000"
    environment:
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
    networks:
      - devnet

  node-sonar:
    build:
      context: .
      dockerfile: Dockerfile.node-sonar
    image: node-sonar
    container_name: node-sonar
    networks:
      - devnet

volumes:
  mongo-data:
  jenkins-data: # ‚úÖ replaces `jenkins_home` to fix write errors

networks:
  devnet:
